apis:
  mds-provider:
    enabled: true
    pathPrefix: /provider
    port: 4000
    version: latest
    useDB: true
    migration: false
    useCache: true
    useEvents: true
  mds-agency:
    enabled: true
    pathPrefix: /agency
    port: 4001
    version: latest
    useDB: true
    migration: false
    useCache: true
    useEvents: true
  mds-audit:
    enabled: true
    pathPrefix: /audit
    port: 4002
    version: latest
    useDB: true
    migration: false
    useCache: true
    useEvents: true
  mds-policy:
    enabled: true
    pathPrefix: /policy
    port: 4003
    version: latest
    useDB: true
    migration: false
    useCache: true
    useEvents: true
  mds-compliance:
    enabled: true
    pathPrefix: /compliance
    port: 4004
    version: latest
    useDB: true
    migration: false
    useCache: true
    useEvents: true
  mds-daily:
    enabled: true
    pathPrefix: /daily
    port: 4005
    version: latest
    useDB: true
    migration: false
    useCache: true
    useEvents: true
  mds-native:
    enabled: true
    pathPrefix: /native
    port: 4006
    version: latest
    useDB: true
    migration: false
    useCache: true
    useEvents: true
  mds-policy-author:
    enabled: true
    pathPrefix: /policy-author
    port: 4007
    version: latest
    useDB: true
    migration: false
    useCache: true
    useEvents: true
  mds-identity:
    enabled: true
    pathPrefix: /identity
    port: 4008
    version: latest
    useDB: false
    migration: false
    useCache: false
    useEvents: false
timezone: America/Los_Angeles
registry:
useLatestImage: true
tls:
  enabled: false
  domain:
  letsencrypt:
    enabled: false
    production: false
jwt:
  issuer:
  enabled: false
  audiences: []
postgresql:
  internal: true
  host:
  hostReader:
  port: 5432
  existingSecret: pg-pass
  postgresqlUsername: mdsadmin
  postgresqlDatabase: mds
  image:
    repository: postgres
    tag: 10
redis:
  internal: true
  host:
  port: 6379
  usePassword: false
  cluster:
    enabled: false
  master:
    disableCommands: []
  slave:
    disableCommands: []
fluentbit:
  enabled: false
  backend:
    type: es
    es:
      host: localhost
      port: 65535
      scheme: http
      # Elastic Index Name
      index: kubernetes_cluster
      type: flb_type
      logstash_prefix: kubernetes_cluster
      replace_dots: 'On'
      time_key: '@timestamp'
      # Optional username credential for Elastic X-Pack access
      http_user:
      # Password for user defined in HTTP_User
      http_passwd:
      # Optional TLS encryption to ElasticSearch instance
      tls: 'on'
      tls_verify: 'off'
      # TLS certificate for the Elastic (in PEM format). Use if tls=on and tls_verify=on.
      tls_ca: ''
      # TLS debugging levels = 1-4
      tls_debug: 4
