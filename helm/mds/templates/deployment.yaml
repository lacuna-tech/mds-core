{{- range $name, $api := .Values.apis }}
  {{- if $api.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app: {{ $name }}
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      annotations:
        prometheus.io/path: /prometheus
        prometheus.io/port: "4000"
        prometheus.io/scrape: "true"
      labels:
        app: {{ $name }}
    spec:
      volumes:
        {{- if and $.Values.nats.enabled $.Values.nats.credentials }}
        - name: creds-volume
          secret:
            secretName: nats-creds
        {{- end }}
      containers:
      - name: {{ $name }}
        image: {{ if $.Values.registry }}{{ printf "%s/" $.Values.registry }}{{- end}}{{ $name }}:{{ $api.version }}
        {{- if $.Values.registry }}
        imagePullPolicy: IfNotPresent
        {{- end }}
        {{- if (eq $api.version "latest") }}
        imagePullPolicy: Never
        {{- end }}
        resources:
          limits:
            cpu: {{ $api.resourcesLimitsCpu | default "1000m" }}
            memory: {{ $api.resourcesLimitsMemory | default "1024Mi" }}
          requests:
            cpu: {{ $api.resourcesRequestsCpu | default "5m" }}
            memory: {{ $api.resourcesRequestsMemory | default "64Mi" }}
        ports:
        - containerPort: 4000
          name: user-port
          protocol: TCP
        env:
          - name: PORT
            value: "4000"
          - name: PATH_PREFIX
            value: {{ $api.pathPrefix }}
          - name: TIMEZONE
            value: {{ $.Values.timezone }}
          - name: PG_USER
            value: {{ $.Values.postgresql.postgresqlUsername }}
          - name: PG_NAME
            value: {{ $.Values.postgresql.postgresqlDatabase }}
          - name: PG_PASS
            valueFrom:
              secretKeyRef:
                name: mds-secrets
                key: postgresql-password
          - name: PG_HOST
          {{- if $.Values.postgresql.internal }}
            value: {{ $.Release.Name }}-postgresql
          {{- else }}
            value: {{ $.Values.postgresql.host }}
          {{- end }}
          {{- if $.Values.postgresql.hostReader }}
          - name: PG_HOST_READER
            value: {{ $.Values.postgresql.hostReader }}
          {{- end }}
          {{- if $.Values.postgresql.port }}
          - name: PG_PORT
            value: {{ $.Values.postgresql.port | quote }}
          {{- end}}
          {{- if $api.migration }}
          - name: PG_MIGRATIONS
            value: {{ $api.migration | quote }}
          {{- end }}
          - name: REDIS_HOST
          {{- if $.Values.redis.internal }}
            value: {{ $.Release.Name }}-redis-master
          {{- else }}
            value: {{ $.Values.redis.host }}
          {{- end }}
          - name: REDIS_PORT
            value: {{ $.Values.redis.port | quote }}
          - name: NATS
          {{- if $.Values.nats.internal }}
            value: {{ $.Release.Name }}-nats-client
          {{- else }}
            value: {{ $.Values.nats.host }}
          {{- end }}
          - name: KAFKA_HOST
          {{- if $.Values.kafka.internal }}
            value: {{ $.Release.Name }}-kafka:{{ $.Values.kafka.port }}
          {{- else }}
            value: {{ $.Values.kafka.host }}:{{ $.Values.kafka.port }}
          {{- end }}
          - name: TENANT_ID
          {{- if hasKey $.Values "tenantId" }}
            value: {{ $.Values.tenantId }}
          {{- else }}
            value: {{ $.Release.Namespace }}
          {{- end }}
          {{- if $api.env }}
{{ toYaml $api.env | indent 10 }}
          {{- end }}
          {{- if hasKey $.Values "global" }}
          {{- if hasKey $.Values.global "env" }}
{{ toYaml $.Values.global.env | indent 10 }}
          {{- end }}
          {{- end }}
  {{- end }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: mds-secrets
  namespace: {{ $.Release.Namespace }}
data:
  {{- if .Values.postgresql.password }}
  postgresql-password: {{ .Values.postgresql.password | b64enc }}
  {{- end }}
type: Opaque
{{- if and $.Values.nats.enabled $.Values.nats.credentials }}
---
apiVersion: v1
kind: Secret
metadata:
  name: nats-creds
  namespace: {{ $.Release.Namespace }}
data:
  sys.creds: {{ $.Values.nats | b64enc }}
type: Opaque
{{- end }}
