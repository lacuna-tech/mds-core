{{- if .Values.jwt.enabled }}
{{- if .Values.jwt.bypassInternal }}
# This sets up outbound mTLS for intra-namespace requests
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: default
  namespace: {{ .Release.Namespace }}
spec:
  host: {{ printf "*.%s.svc.cluster.local" .Release.Namespace | quote }}
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRole
metadata:
  name: mds-internal-service
  namespace: {{ .Release.Namespace }}
spec:
  rules:
  - services: ["*"]
    methods: ["*"]
    constraints:
    - key: "destination.metadata[namespace]"
      values:
      - {{ .Release.Namespace }}
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRoleBinding
metadata:
  name: mds-internal-service
  namespace: {{ .Release.Namespace }}
spec:
  roleRef:
    kind: ServiceRole
    name: "mds-internal-service"
  subjects:
  - properties:
      source.namespace: {{ .Release.Namespace | quote }}
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRole
metadata:
  name: mds-external-service
  namespace: {{ .Release.Namespace }}
spec:
  rules:
  - services: ["*"]
    methods: ["*"]
    constraints:
    - key: "destination.metadata[namespace]"
      values:
      - {{ .Release.Namespace }}
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRoleBinding
metadata:
  name: mds-external-service
  namespace: {{ .Release.Namespace }}
spec:
  roleRef:
    kind: ServiceRole
    name: mds-external-service
  subjects:
  {{- range .Values.jwt.audiences }}
  # allow presenters of JWT tokens based one or more properties of the token
  # (audience, claims, etc.)
  # https://archive.istio.io/v1.3/docs/reference/config/authorization/constraints-and-properties/#supported-properties
  - properties:
      request.auth.audiences: {{ . | quote }}
      request.auth.claims[iss]: {{ $.Values.jwt.issuer }}
  {{- end }}
{{- if .Values.jwt.firstInstall }}
---
# THIS MUST BE IN PLACE FOR JWT TO FUNCTION CORRECTLY
apiVersion: "rbac.istio.io/v1alpha1"
kind: ClusterRbacConfig
metadata:
  name: default
spec:
  mode: 'ON_WITH_INCLUSION'
  inclusion:
    namespaces:
      - {{ .Release.Namespace }}
{{- end }}
{{- else }} # use old jwt configuration
{{- range $name, $api := .Values.apis }}
{{- if $api.enabled }}
{{- if hasKey $api "pathPrefix" }}
apiVersion: authentication.istio.io/v1alpha1
kind: Policy
metadata:
  name: {{ $name }}-auth
  namespace: {{ $.Release.Namespace }}
spec:
  targets:
  - name: {{ $name }}
  peers:
  - mtls: {}
  origins:
  - jwt:
      audiences:
      {{- range $.Values.jwt.audiences }}
      - {{ . | quote }}
      {{- end }}
      issuer: {{ $.Values.jwt.issuer | quote }}
      jwksUri: {{ printf "%s.well-known/jwks.json" $.Values.jwt.issuer }}
      trigger_rules:
      - excluded_paths:
        - exact: {{ $api.pathPrefix }}/health
        - exact: /health
  principalBinding: USE_ORIGIN
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
