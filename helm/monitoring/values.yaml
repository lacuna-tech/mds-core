prometheus:

  serverFiles:
    alerting_rules.yml:
      groups:

      - name: Nodes
        rules:

        - alert: NodeMemoryWarn
          expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 20
          for: 5m
          labels:
            severity: warning
          annotations:
            identifier: "{{ $labels.kubernetes_node }}"
            description: "Low memory on node ({{ $value }}% available)"

        - alert: NodeMemoryCritical
          expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
          for: 5m
          labels:
            severity: critical
          annotations:
            identifier: "{{ $labels.kubernetes_node }}"
            description: "Low memory on node ({{ $value }}% available)"

        - alert: NodeDiskSpaceWarn
          expr: (node_filesystem_used_bytes / node_filesystem_size_bytes) * 100 < 20
          for: 5m
          labels:
            severity: warning
          annotations:
            identifier: "{{ $labels.kubernetes_node }}"
            description: "Low disk space on node ({{ $value }}% available)"

        - alert: NodeDiskSpaceCritical
          expr: (node_filesystem_used_bytes / node_filesystem_size_bytes) * 100 < 10
          for: 5m
          labels:
            severity: critical
          annotations:
            identifier: "{{ $labels.kubernetes_node }}"
            description: "Very low disk space on node ({{ $value }}% available)"

        - alert: NodeInodesWarn
          expr: node_filesystem_files_free{mountpoint ="/"} / node_filesystem_files{mountpoint ="/"} * 100 < 20
          for: 5m
          labels:
            severity: warning
          annotations:
            identifier: "{{ $labels.kubernetes_node }}"
            description: "Low filesystem inodes on node ({{ $value }}% available)"

        - alert: NodeInodesCritical
          expr: node_filesystem_files_free{mountpoint ="/"} / node_filesystem_files{mountpoint ="/"} * 100 < 10
          for: 5m
          labels:
            severity: critical
          annotations:
            identifier: "{{ $labels.kubernetes_node }}"
            description: "Low filesystem inodes on node ({{ $value }}% available)"

        - alert: NodeCpuLoadWarn
          expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
          for: 5m
          labels:
            severity: warning
          annotations:
            identifier: "{{ $labels.kubernetes_node }}"
            description: "High CPU usage on node ({{ $value }}%)"

        - alert: NodeCpuLoadCritical
          expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 90
          for: 5m
          labels:
            severity: warning
          annotations:
            identifier: "{{ $labels.kubernetes_node }}"
            description: "High CPU usage on node ({{ $value }}%)"

      - name: Pods
        rules:

        - alert: PersistentVolumeDiskWarning
          expr: kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes * 100 < 20
          for: 5m
          labels:
            severity: warning
          annotations:
            identifier: "{{ $labels.namespace }}/{{ $labels.persistenvolumeclaim }}"
            description: "Low disk space for PV ({{ $value }}% available)"

        - alert: StatefulsetDown
          expr: (kube_statefulset_status_replicas_current - kube_statefulset_status_replicas_ready) != 0
          for: 5m
          labels:
            severity: error
          annotations:
            identifier: "{{ $labels.namespace }}/{{ $labels.statefulset }}"
            description: "StatefulSet failure - {{ $value }} member(s) down"

        - alert: PodRestartsWarning
          expr: rate(kube_pod_container_status_restarts_total[5m]) > 0
          for: 5m
          labels:
            severity: warning
          annotations:
            identifier: "{{ $labels.namespace }}/{{ $labels.pod }} "
            description: "Pod container restarted {{ $value }} times in last 5 minutes"

        - alert: PodContainerStatusWaiting
          expr: kube_pod_container_status_waiting_reason == 1
          for: 5m
          labels:
            severity: error
          annotations:
            identifier: "{{ $labels.namespace }}/{{ $labels.pod }} "
            description: "Pod waiting in state {{ $labels.reason }}"

  alertmanagerFiles:
    notifications.tmpl: |
      {{ define "__single_message_title" }}{{ range .Alerts.Firing }}{{ .Labels.alertname }} @ {{ .Annotations.identifier }}{{ end }}{{ range .Alerts.Resolved }}{{ .Labels.alertname }} @ {{ .Annotations.identifier }}{{ end }}{{ end }}
      {{ define "custom_title" }}[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if or (and (eq (len .Alerts.Firing) 1) (eq (len .Alerts.Resolved) 0)) (and (eq (len .Alerts.Firing) 0) (eq (len .Alerts.Resolved) 1)) }}{{ template "__single_message_title" . }}{{ end }}{{ end }}
      {{ define "custom_slack_message" }}
      {{ if or (and (eq (len .Alerts.Firing) 1) (eq (len .Alerts.Resolved) 0)) (and (eq (len .Alerts.Firing) 0) (eq (len .Alerts.Resolved) 1)) }}
      {{ range .Alerts.Firing }}{{ .Annotations.description }}{{ end }}{{ range .Alerts.Resolved }}{{ .Annotations.description }}{{ end }}
      {{ else }}
      {{ if gt (len .Alerts.Firing) 0 }}
      *Alerts Firing:*
      {{ range .Alerts.Firing }}- {{ .Annotations.identifier }}: {{ .Annotations.description }}
      {{ end }}{{ end }}
      {{ if gt (len .Alerts.Resolved) 0 }}
      *Alerts Resolved:*
      {{ range .Alerts.Resolved }}- {{ .Annotations.identifier }}: {{ .Annotations.description }}
      {{ end }}{{ end }}
      {{ end }}
      {{ end }}


    alertmanager.yml:

      global:
        slack_api_url: "https://hooks.slack.com/services/REDACTED/REDACTED/REDACTED"

      templates:
      - /etc/config/notifications.tmpl

      receivers:
      - name: default-receiver
        slack_configs:
        - channel: '#k8s-alerts'
          send_resolved: false
