openapi: "3.0.2"
info:
  title: MDS Transaction API
  version: "1.0"
servers:
  - url: https://api.server.test/v1

paths:
  /transaction:
    post:
      summary: Create a Transaction
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../schema-gen/TransactionSchema.json"

      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    $ref: "#/components/schemas/Version"
                  transaction:
                    $ref: "../schema-gen/TransactionSchema.json"
        "400":
          description: BAD_REQUEST
        "409":
          description: CONFLICT
        "500":
          description: SERVER_ERROR
        "503":
          description: SERVICE_UNAVAILABLE
  /transactions:
    get:
      summary: Get a collection of Transactions
      tags:
        - Transactions
      parameters:
        - in: query
          name: order_column
          schema:
            type: string
            enum: ["timestamp"]
        - in: query
          name: order_direction
          schema:
            type: string
            enum: ["ASC", "DESC"]
        - in: query
          name: provider_id
          schema:
            type: string
            format: uuid
        - in: query
          name: before
          schema:
            type: string
            format: byte
        - in: query
          name: after
          schema:
            type: string
            format: byte
        - in: query
          name: start_timestamp
          schema:
            $ref: "#/components/schemas/Timestamp"
        - in: query
          name: end_timestamp
          schema:
            $ref: "#/components/schemas/Timestamp"
        - in: query
          name: limit
          schema:
            type: number
            format: i64
            default: 10
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    $ref: "#/components/schemas/Version"
                  links:
                    type: object
                    properties:
                      prev:
                        type: string
                        format: url
                        nullable: true
                      next:
                        type: string
                        format: url
                        nullable: true
                  transactions:
                    type: array
                    items:
                      $ref: "../schema-gen/TransactionSchema.json"
        "404":
          description: NOT_FOUND
        "500":
          description: SERVER_ERROR
        "503":
          description: SERVICE_UNAVAILABLE

    post:
      summary: Create a collection of Transactions
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "../schema-gen/TransactionSchema.json"

      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    $ref: "#/components/schemas/Version"
                  transactions:
                    type: array
                    items:
                      $ref: "../schema-gen/TransactionSchema.json"
        "400":
          description: BAD_REQUEST
        "409":
          description: CONFLICT
        "500":
          description: SERVER_ERROR
        "503":
          description: SERVICE_UNAVAILABLE

  /transactions/{transaction_id}:
    get:
      summary: Get a transaction
      tags:
        - Transactions
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    $ref: "#/components/schemas/Version"
                  transaction:
                    $ref: "../schema-gen/TransactionSchema.json"
        "404":
          description: NOT_FOUND
        "500":
          description: SERVER_ERROR
        "503":
          description: SERVICE_UNAVAILABLE

  /transactions/{transaction_id}/operations:
    get:
      summary: Get a transaction's operations
      tags:
        - Operations
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    $ref: "#/components/schemas/Version"
                  operations:
                    type: array
                    items:
                      $ref: "../schema-gen/TransactionOperationSchema.json"
        "404":
          description: NOT_FOUND
        "500":
          description: SERVER_ERROR
        "503":
          description: SERVICE_UNAVAILABLE
    post:
      summary: Add an operation for a transaction
      tags:
        - Operations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../schema-gen/TransactionOperationSchema.json"

      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    $ref: "#/components/schemas/Version"
                  operation:
                    $ref: "../schema-gen/TransactionOperationSchema.json"
        "400":
          description: BAD_REQUEST
        "409":
          description: CONFLICT
        "500":
          description: SERVER_ERROR
        "503":
          description: SERVICE_UNAVAILABLE

  /transactions/{transaction_id}/statuses:
    get:
      summary: Get a transaction's statuses
      tags:
        - Statuses
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    $ref: "#/components/schemas/Version"
                  statuses:
                    type: array
                    items:
                      $ref: "../schema-gen/TransactionStatusSchema.json"
        "404":
          description: NOT_FOUND
        "500":
          description: SERVER_ERROR
        "503":
          description: SERVICE_UNAVAILABLE
    post:
      summary: Add a status for a transaction
      tags:
        - Statuses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../schema-gen/TransactionOperationSchema.json"

      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    $ref: "#/components/schemas/Version"
                  status:
                    $ref: "../schema-gen/TransactionStatusSchema.json"
        "400":
          description: BAD_REQUEST
        "409":
          description: CONFLICT
        "500":
          description: SERVER_ERROR
        "503":
          description: SERVICE_UNAVAILABLE

  /transactions/statuses:
    get:
      summary: Get a transaction's statuses
      tags:
        - Statuses
      parameters:
        - in: query
          name: transaction_id
          description: transaction_ids to get all statuses for
          schema:
            type: array
            items:
              type: string
              format: uuid
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    $ref: "#/components/schemas/Version"
                  statuses:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        $ref: "../schema-gen/TransactionStatusSchema.json"
        "404":
          description: NOT_FOUND
        "500":
          description: SERVER_ERROR
        "503":
          description: SERVICE_UNAVAILABLE

components:
  schemas:
    Version:
      description: Current API version
      type: number
      format: f32
      example:
        value: 0.0.1
    Timestamp:
      description: Timestamp in Milliseconds since Epoch
      type: integer
      format: i64
