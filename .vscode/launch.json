{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Server: mds-agency",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-agency",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-agency",
        "PATH_PREFIX": "/agency"
      }
    },
    {
      "name": "Server: mds-attachment-service",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-attachment-service",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-attachment-service"
      }
    },
    {
      "name": "Server: mds-audit",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-audit",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-audit",
        "PATH_PREFIX": "/audit"
      }
    },
    {
      "name": "Server: mds-audit-service",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-audit-service",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-audit-service"
      }
    },
    {
      "name": "Server: mds-collector-api",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-collector-api",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-collector-api",
        "PATH_PREFIX": "/collector"
      }
    },
    {
      "name": "Server: mds-collector-backend",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-collector-backend",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-collector-backend"
      }
    },
    {
      "name": "Server: mds-compliance",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-compliance",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-compliance",
        "PATH_PREFIX": "/compliance"
      }
    },
    {
      "name": "Server: mds-daily",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-daily",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-daily",
        "PATH_PREFIX": "/daily"
      }
    },
    {
      "name": "Server: mds-geography",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-geography",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-geography",
        "PATH_PREFIX": "/geography"
      }
    },
    {
      "name": "Server: mds-geography-author",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-geography-author",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-geography-author",
        "PATH_PREFIX": "/geography-author"
      }
    },
    {
      "name": "Server: mds-geography-service",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-geography-service",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-geography-service"
      }
    },
    {
      "name": "Server: mds-ingest-service",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-ingest-service",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-ingest-service"
      }
    },
    {
      "name": "Server: mds-jursidiction",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-jurisdiction",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-jurisdiction",
        "PATH_PREFIX": "/jurisdiction"
      }
    },
    {
      "name": "Server: mds-jursidiction-service",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-jurisdiction-service",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-jurisdiction-service"
      }
    },
    {
      "name": "Server: mds-policy",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-policy",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-policy",
        "PATH_PREFIX": "/policy"
      }
    },
    {
      "name": "Server: mds-policy-author",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-policy-author",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-policy-author",
        "PATH_PREFIX": "/policy-author"
      }
    },
    {
      "name": "Server: mds-policy-service",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "-r",
        "ts-node/register",
        "-r",
        "tsconfig-paths/register",
        "-r",
        "dotenv/config"
      ],
      "args": ["server"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-policy-service",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-policy-service"
      }
    },
    {
      "name": "Tests: mds-agency",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-agency",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-agency",
        "PATH_PREFIX": "/agency"
      }
    },
    {
      "name": "Tests: mds-api-authorizer",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-api-authorizer",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-api-authorizer"
      }
    },
    {
      "name": "Tests: mds-api-server",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-api-server",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-api-server"
      }
    },
    {
      "name": "Tests: mds-attachment-service",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "--inspect-brk",
        "${workspaceRoot}/node_modules/.bin/jest",
        "--runInBand",
        "--coverage",
        "false"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-attachment-service",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-attachment-service"
      }
    },
    {
      "name": "Tests: mds-audit",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-audit",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-audit",
        "PATH_PREFIX": "/audit"
      }
    },
    {
      "name": "Tests: mds-audit-service",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "--inspect-brk",
        "${workspaceRoot}/node_modules/.bin/jest",
        "--runInBand",
        "--coverage",
        "false"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-audit-service",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-audit-service"
      }
    },
    {
      "name": "Tests: mds-collector-api",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "--inspect-brk",
        "${workspaceRoot}/node_modules/.bin/jest",
        "--runInBand",
        "--coverage",
        "false"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-collector-api",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-collector-api",
        "PATH_PREFIX": "/collector"
      }
    },
    {
      "name": "Tests: mds-collector-backend",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "--inspect-brk",
        "${workspaceRoot}/node_modules/.bin/jest",
        "--runInBand",
        "--coverage",
        "false"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-collector-backend",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-collector-backend"
      }
    },
    {
      "name": "Tests: mds-compliance",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-compliance",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-compliance",
        "PATH_PREFIX": "/compliance"
      }
    },
    {
      "name": "Tests: mds-daily",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-daily",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-daily",
        "PATH_PREFIX": "/daily"
      }
    },
    {
      "name": "Tests: mds-db",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-db",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-db"
      }
    },
    {
      "name": "Tests: mds-geography",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-geography",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-geography",
        "PATH_PREFIX": "/geography"
      }
    },
    {
      "name": "Tests: mds-geography-author",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-geography-author",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-geography-author",
        "PATH_PREFIX": "/geography-author"
      }
    },
    {
      "name": "Tests: mds-geography-service",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "--inspect-brk",
        "${workspaceRoot}/node_modules/.bin/jest",
        "--runInBand",
        "--coverage",
        "false"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-geography-service",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-geography-service"
      }
    },
    {
      "name": "Tests: mds-ingest-service",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "--inspect-brk",
        "${workspaceRoot}/node_modules/.bin/jest",
        "--runInBand",
        "--coverage",
        "false"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-ingest-service",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-ingest-service"
      }
    },
    {
      "name": "Tests: mds-jurisdiction",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-jurisdiction",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-jurisdiction",
        "PATH_PREFIX": "/jurisdictions"
      }
    },
    {
      "name": "Tests: mds-jurisdiction-service",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "--inspect-brk",
        "${workspaceRoot}/node_modules/.bin/jest",
        "--runInBand",
        "--coverage",
        "false"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-jurisdiction-service",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-jurisdiction-service"
      }
    },
    {
      "name": "Tests: mds-logger",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-logger",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-logger"
      }
    },
    {
      "name": "Tests: mds-policy",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-policy",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-policy",
        "PATH_PREFIX": "/policy"
      }
    },
    {
      "name": "Tests: mds-policy-author",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-policy-author",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-policy-author",
        "PATH_PREFIX": "/policy-author"
      }
    },
    {
      "name": "Tests: mds-policy-service",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "--inspect-brk",
        "${workspaceRoot}/node_modules/.bin/jest",
        "--runInBand",
        "--coverage",
        "false"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-policy-service",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-policy-service"
      }
    },
    {
      "name": "Tests: mds-repository",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-repository",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-repository"
      }
    },
    {
      "name": "Tests: mds-stream",
      "type": "node",
      "request": "launch",
      "runtimeArgs": [
        "--inspect-brk",
        "${workspaceRoot}/node_modules/.bin/jest",
        "--runInBand",
        "--coverage",
        "false"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-stream",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-stream"
      }
    },
    {
      "name": "Tests: mds-types",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-types",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-types"
      }
    },
    {
      "name": "Tests: mds-utils",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
      "args": [
        "--project",
        "${workspaceFolder}/tsconfig.json",
        "-r",
        "ts-node/register",
        "--timeout",
        "0"
      ],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "protocol": "inspector",
      "cwd": "${workspaceFolder}/packages/mds-utils",
      "env": {
        "DOTENV_CONFIG_PATH": "${workspaceFolder}/.env",
        "npm_package_name": "@mds-core/mds-utils"
      }
    }
  ]
}
